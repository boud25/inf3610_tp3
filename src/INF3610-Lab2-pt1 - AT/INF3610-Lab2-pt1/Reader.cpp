///////////////////////////////////////////////////////////////////////////////
//
//	Reader.cpp
//
///////////////////////////////////////////////////////////////////////////////
#include "Reader.h"

///////////////////////////////////////////////////////////////////////////////
//
//	Constructor
//
///////////////////////////////////////////////////////////////////////////////
Reader::Reader(sc_module_name name)
/* À compléter */
{
	/*
	
	À compléter
	
	*/
	SC_THREAD(thread);
}

///////////////////////////////////////////////////////////////////////////////
//
//	Destructor
//
///////////////////////////////////////////////////////////////////////////////
Reader::~Reader()
{
	/*
	
	À compléter
	
	*/
}

///////////////////////////////////////////////////////////////////////////////
//
//	Thread
//
///////////////////////////////////////////////////////////////////////////////
void Reader::thread(void)
{
	/*
	
	À compléter
	
	*/
	// Synchronize to gather the reading address 
	while (1)
	{
		do
		{
			wait(clk.posedge_event());
		} while (!request.read());
		ack.write(false);
		unsigned int adrs = address.read();

		// Write the corresponding data
		data.write(dataPortRAM->Read(adrs));

		ack.write(true);
	}
}