///////////////////////////////////////////////////////////////////////////////
//
//	Reader.cpp
//
///////////////////////////////////////////////////////////////////////////////
#include "Reader.h"

///////////////////////////////////////////////////////////////////////////////
//
//	Constructor
//
///////////////////////////////////////////////////////////////////////////////
Reader::Reader(sc_module_name name)
/* À compléter */
{
	/*
	
	À compléter
	
	*/
	SC_METHOD(thread);
	sensitive << clk;
}

///////////////////////////////////////////////////////////////////////////////
//
//	Destructor
//
///////////////////////////////////////////////////////////////////////////////
Reader::~Reader()
{
	/*
	
	À compléter
	
	*/
}

///////////////////////////////////////////////////////////////////////////////
//
//	Thread
//
///////////////////////////////////////////////////////////////////////////////
void Reader::thread(void)
{
	/*
	
	À compléter
	
	*/
	// Synchronize to gather the reading address 
	do
	{
		wait(request.posedge_event());
	} while (!request.read());

	unsigned int adrs = address.read();

	// Write the corresponding data
	data.write(dataPortRAM->Read(adrs));

	ack.write(true);

	return;
}